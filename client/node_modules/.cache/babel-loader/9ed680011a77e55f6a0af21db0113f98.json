{"ast":null,"code":"import { CartActionTypes } from \"./cart.types\";\nimport { addItemToCart, removeItem, removeItemFromCart } from \"./cart.utils\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        //we spread everything in our state.\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id) //filter gives us back a new array where the condition above is true\n        //which is the array of cartItems which are not equal to the action.payload\n        //for clearing items from cart as filter returns the array that aligns \n        //with the condition which is true -- hence the remained item are put in this new array\n\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return { ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItem","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM_FROM_CART","filter","cartItem","id","REMOVE_ITEM"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,kBAApC,QAA8D,cAA9D;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAAEC,KAAK,GAAGJ,aAAV,EAAyBK,MAAzB,KAAqC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,eAAe,CAACW,kBAArB;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFZ,OAAP;;AAIJ,SAAKL,eAAe,CAACY,QAArB;AACI,aAAO,EACH,GAAGJ,KADA;AACM;AACTF,QAAAA,SAAS,EAAEL,aAAa,CAACO,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFrB,OAAP;;AAIJ,SAAKb,eAAe,CAACc,oBAArB;AACI,aAAO,EACH,GAAGN,KADA;AAEHF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CACPC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBR,MAAM,CAACI,OAAP,CAAeI,EADpC,CAFR,CAIF;AACD;AACA;AACA;;AAPG,OAAP;;AASJ,SAAKjB,eAAe,CAACkB,WAArB;AACI,aAAO,EACH,GAAGV,KADA;AAEHF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF1B,OAAP;;AAIJ;AACI,aAAOL,KAAP;AA3BR;AA6BH,CA9BD;;AAgCA,eAAeD,WAAf","sourcesContent":["import { CartActionTypes } from \"./cart.types\";\nimport { addItemToCart, removeItem, removeItemFromCart } from \"./cart.utils\";\n\nconst INITIAL_STATE = {\n    hidden: true,\n    cartItems: [],\n};\n\nconst cartReducer = ( state = INITIAL_STATE, action ) => {\n    switch (action.type) {\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\n            return {\n                ...state,\n                hidden: !state.hidden\n            };\n        case CartActionTypes.ADD_ITEM:\n            return {\n                ...state,//we spread everything in our state.\n                cartItems: addItemToCart(state.cartItems, action.payload)\n            };\n        case CartActionTypes.CLEAR_ITEM_FROM_CART:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(\n                    cartItem => cartItem.id !== action.payload.id\n                )//filter gives us back a new array where the condition above is true\n                //which is the array of cartItems which are not equal to the action.payload\n                //for clearing items from cart as filter returns the array that aligns \n                //with the condition which is true -- hence the remained item are put in this new array\n            };\n        case CartActionTypes.REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: removeItemFromCart(state.cartItems, action.payload)\n            };\n        default: \n            return state;\n    }\n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}