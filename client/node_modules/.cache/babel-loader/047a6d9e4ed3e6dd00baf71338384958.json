{"ast":null,"code":"import UserActionTypes from \"./user.types\"; //SIGN IN SUCCESS && FAILURE\n\nexport const signInSuccess = user => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  //this string should never change (hence the use of capital & snake case_)\n  payload: user\n});\nexport const signInFailure = error => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error\n}); //SIGN UP SUCCESS && FAILURE\n\nexport const signUpSuccess = ({\n  user,\n  additionalData\n}) => ({\n  type: UserActionTypes.SIGN_UP_SUCCESS,\n  payload: {\n    user,\n    additionalData\n  }\n});\nexport const signUpFailure = error => ({\n  type: UserActionTypes.SIGN_UP_FAILURE,\n  payload: error\n}); //EMAIL SIGN IN START\n\nexport const emailSignInStart = emailAndPassword => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword\n}); //GOOGLE SIGN IN START\n\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\n}); //SIGN UP START\n\nexport const signUpStart = userCredentials => ({\n  type: UserActionTypes.SIGN_UP_START,\n  payload: userCredentials //we pass in email, password & displayName as an object called userCredentials as they will be needed later\n\n}); //SESSION PERSISTENCE\n\nexport const checkUserSession = () => ({\n  type: UserActionTypes.CHECK_USER_SESSION\n}); //SIGN OUT START, SUCCESS && FAILURE\n\nexport const signOutStart = () => ({\n  type: UserActionTypes.SIGN_OUT_START\n});\nexport const signOutSuccess = () => ({\n  type: UserActionTypes.SIGN_OUT_SUCCESS\n});\nexport const signOutFailure = error => ({\n  type: UserActionTypes.SIGN_OUT_FAILURE,\n  payload: error\n});","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/src/redux/user/user.actions.js"],"names":["UserActionTypes","signInSuccess","user","type","SIGN_IN_SUCCESS","payload","signInFailure","error","SIGN_IN_FAILURE","signUpSuccess","additionalData","SIGN_UP_SUCCESS","signUpFailure","SIGN_UP_FAILURE","emailSignInStart","emailAndPassword","EMAIL_SIGN_IN_START","googleSignInStart","GOOGLE_SIGN_IN_START","signUpStart","userCredentials","SIGN_UP_START","checkUserSession","CHECK_USER_SESSION","signOutStart","SIGN_OUT_START","signOutSuccess","SIGN_OUT_SUCCESS","signOutFailure","SIGN_OUT_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAIC,IAAD,KAAW;AACtCC,EAAAA,IAAI,EAAEH,eAAe,CAACI,eADgB;AACC;AACvCC,EAAAA,OAAO,EAAEH;AAF6B,CAAX,CAAtB;AAKP,OAAO,MAAMI,aAAa,GAAIC,KAAD,KAAY;AACvCJ,EAAAA,IAAI,EAAEH,eAAe,CAACQ,eADiB;AAEvCH,EAAAA,OAAO,EAAEE;AAF8B,CAAZ,CAAtB,C,CAKP;;AACA,OAAO,MAAME,aAAa,GAAG,CAAC;AAAEP,EAAAA,IAAF;AAAQQ,EAAAA;AAAR,CAAD,MAA+B;AAC1DP,EAAAA,IAAI,EAAEH,eAAe,CAACW,eADoC;AAE1DN,EAAAA,OAAO,EAAE;AAAEH,IAAAA,IAAF;AAAQQ,IAAAA;AAAR;AAFiD,CAA/B,CAAtB;AAKP,OAAO,MAAME,aAAa,GAAIL,KAAD,KAAY;AACvCJ,EAAAA,IAAI,EAAEH,eAAe,CAACa,eADiB;AAEvCR,EAAAA,OAAO,EAAEE;AAF8B,CAAZ,CAAtB,C,CAKP;;AACA,OAAO,MAAMO,gBAAgB,GAAIC,gBAAD,KAAuB;AACrDZ,EAAAA,IAAI,EAAEH,eAAe,CAACgB,mBAD+B;AAErDX,EAAAA,OAAO,EAAEU;AAF4C,CAAvB,CAAzB,C,CAKP;;AACA,OAAO,MAAME,iBAAiB,GAAG,OAAO;AACtCd,EAAAA,IAAI,EAAEH,eAAe,CAACkB;AADgB,CAAP,CAA1B,C,CAIP;;AACA,OAAO,MAAMC,WAAW,GAAIC,eAAD,KAAsB;AAC/CjB,EAAAA,IAAI,EAAEH,eAAe,CAACqB,aADyB;AAE/ChB,EAAAA,OAAO,EAAEe,eAFsC,CAErB;;AAFqB,CAAtB,CAApB,C,CAKP;;AACA,OAAO,MAAME,gBAAgB,GAAG,OAAO;AACrCnB,EAAAA,IAAI,EAAEH,eAAe,CAACuB;AADe,CAAP,CAAzB,C,CAIP;;AACA,OAAO,MAAMC,YAAY,GAAG,OAAO;AACjCrB,EAAAA,IAAI,EAAEH,eAAe,CAACyB;AADW,CAAP,CAArB;AAIP,OAAO,MAAMC,cAAc,GAAG,OAAO;AACnCvB,EAAAA,IAAI,EAAEH,eAAe,CAAC2B;AADa,CAAP,CAAvB;AAIP,OAAO,MAAMC,cAAc,GAAIrB,KAAD,KAAY;AACxCJ,EAAAA,IAAI,EAAEH,eAAe,CAAC6B,gBADkB;AAExCxB,EAAAA,OAAO,EAAEE;AAF+B,CAAZ,CAAvB","sourcesContent":["import UserActionTypes from \"./user.types\";\n\n//SIGN IN SUCCESS && FAILURE\nexport const signInSuccess = (user) => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS, //this string should never change (hence the use of capital & snake case_)\n  payload: user,\n});\n\nexport const signInFailure = (error) => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error,\n});\n\n//SIGN UP SUCCESS && FAILURE\nexport const signUpSuccess = ({ user, additionalData }) => ({\n  type: UserActionTypes.SIGN_UP_SUCCESS,\n  payload: { user, additionalData },\n});\n\nexport const signUpFailure = (error) => ({\n  type: UserActionTypes.SIGN_UP_FAILURE,\n  payload: error,\n});\n\n//EMAIL SIGN IN START\nexport const emailSignInStart = (emailAndPassword) => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword,\n});\n\n//GOOGLE SIGN IN START\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START,\n});\n\n//SIGN UP START\nexport const signUpStart = (userCredentials) => ({\n  type: UserActionTypes.SIGN_UP_START,\n  payload: userCredentials, //we pass in email, password & displayName as an object called userCredentials as they will be needed later\n});\n\n//SESSION PERSISTENCE\nexport const checkUserSession = () => ({\n  type: UserActionTypes.CHECK_USER_SESSION,\n});\n\n//SIGN OUT START, SUCCESS && FAILURE\nexport const signOutStart = () => ({\n  type: UserActionTypes.SIGN_OUT_START,\n});\n\nexport const signOutSuccess = () => ({\n  type: UserActionTypes.SIGN_OUT_SUCCESS,\n});\n\nexport const signOutFailure = (error) => ({\n  type: UserActionTypes.SIGN_OUT_FAILURE,\n  payload: error,\n});\n"]},"metadata":{},"sourceType":"module"}