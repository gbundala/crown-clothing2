{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielbundala/Desktop/crown-clothing2/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport './cart-dropdown.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\n\nconst CartDropdown = ({\n  cartItems,\n  history\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n    key: cartItem.id,\n    item: cartItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"empty-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, \"Your cart is empty\")), /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: () => history.push('/checkout'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"GO TO CHECKOUT\"));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps, null)(CartDropdown)); //withRouter takes in the component that is returned from our connect call\n//as its parameter/ prop\n//withRouter will pass the 'match', 'history' & 'location' objects\n//into the component that is being wrapped. Hence the order with\n//which we wrap the above HOCs matters\n//We want want comes out of the connect component to receive those props\n//i.e. match, history & location","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","CustomButton","connect","CartItem","selectCartItems","createStructuredSelector","withRouter","CartDropdown","cartItems","history","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,6BAAP;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA4B;AAC7C,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,SAAS,CAACE,MAAV,GACGF,SAAS,CAACG,GAAV,CAAcC,QAAQ,iBAClB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,IAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,gBAKG;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANR,CADJ,eAYI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMH,OAAO,CAACK,IAAR,CAAa,WAAb,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZJ,CADJ;AAkBH,CAnBD;;AAqBA,MAAMC,eAAe,GAAGV,wBAAwB,CAAC;AAC7CG,EAAAA,SAAS,EAAEJ;AADkC,CAAD,CAAhD;AAIA,eAAeE,UAAU,CAACJ,OAAO,CAACa,eAAD,EAAkB,IAAlB,CAAP,CAA+BR,YAA/B,CAAD,CAAzB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport './cart-dropdown.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\n\nconst CartDropdown = ({ cartItems, history }) => {\n    return (\n        <div className='cart-dropdown'>\n            <div className='cart-items'>\n                {cartItems.length ? (\n                    cartItems.map(cartItem => (\n                        <CartItem key={cartItem.id} item={cartItem} />\n                    ))\n                ) : (\n                    <span className='empty-message'>\n                        Your cart is empty\n                    </span>\n                )}\n            </div>\n            <CustomButton onClick={() => history.push('/checkout')}>\n                GO TO CHECKOUT\n            </CustomButton>\n        </div>\n    );\n};\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps, null)(CartDropdown));\n//withRouter takes in the component that is returned from our connect call\n//as its parameter/ prop\n//withRouter will pass the 'match', 'history' & 'location' objects\n//into the component that is being wrapped. Hence the order with\n//which we wrap the above HOCs matters\n//We want want comes out of the connect component to receive those props\n//i.e. match, history & location"]},"metadata":{},"sourceType":"module"}