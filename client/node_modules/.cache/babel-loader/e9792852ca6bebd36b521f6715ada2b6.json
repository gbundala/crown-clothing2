{"ast":null,"code":"//LEARN: A reducer is simply a function that received 2 things\n//1. it receives the current/initial state\n//2. it receives the action\n//Actions just simply have type & payload.\nconst INITIAL_STATE = {\n  currentUser: null\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'SET_CURRENT_USER':\n      return { ...state,\n        //we spread everything else in state prop\n        currentUser: action.payload\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default userReducer; //every single reducer gets every single action that gets fired \n//even if it does not relate to the reducer. Hence the default switch\n//back to state (parameter).","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/src/redux/user/user.reducer.js"],"names":["INITIAL_STATE","currentUser","userReducer","state","action","type","payload"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,MAAMA,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE;AADK,CAAtB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AACI,aAAO,EACH,GAAGF,KADA;AACO;AACVF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAFjB,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAPR;;AAQC;AACJ,CAVD;;AAYA,eAAeD,WAAf,C,CAEA;AACA;AACA","sourcesContent":["//LEARN: A reducer is simply a function that received 2 things\n//1. it receives the current/initial state\n//2. it receives the action\n//Actions just simply have type & payload.\n\nconst INITIAL_STATE = {\n    currentUser: null,\n}\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case 'SET_CURRENT_USER':\n            return {\n                ...state, //we spread everything else in state prop\n                currentUser: action.payload\n            }\n        default: \n            return state;\n    };\n};\n\nexport default userReducer;\n\n//every single reducer gets every single action that gets fired \n//even if it does not relate to the reducer. Hence the default switch\n//back to state (parameter)."]},"metadata":{},"sourceType":"module"}