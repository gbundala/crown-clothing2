{"ast":null,"code":"import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\"; //FETCH COLLECTIONS FROM FIREBASE TO THE APP\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n} //STORING NEW COLLECTION ITEMS TO FIREBASE\n//INITIALIZATION SAGA TO FETCH DATA FROM FIREBASE\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n} //INITIALIZATION SAGA (LISTENER) TO START STORING COLLECTION ITEMS IN FIREBASE\n//ROOT SHOP SAGA\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/client/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,+BADF,EAEEC,SAFF,QAGO,+BAHP;AAIA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP,C,CAKA;;AACA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAC/BI,+BAD+B,EAE/BO,QAF+B,CAAjC;AAIA,UAAMV,GAAG,CAACK,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACM,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF,C,CAED;AAEA;;AACA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMjB,UAAU,CACdI,eAAe,CAACc,uBADF,EAEdT,qBAFc,CAAhB;AAID,C,CAED;AAEA;;AACA,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAMhB,GAAG,CAAC,CAACF,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport {\n  convertCollectionsSnapshotToMap,\n  firestore,\n} from \"../../firebase/firebase.utils\";\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from \"./shop.actions\";\n\n//FETCH COLLECTIONS FROM FIREBASE TO THE APP\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\n//STORING NEW COLLECTION ITEMS TO FIREBASE\n\n//INITIALIZATION SAGA TO FETCH DATA FROM FIREBASE\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n\n//INITIALIZATION SAGA (LISTENER) TO START STORING COLLECTION ITEMS IN FIREBASE\n\n//ROOT SHOP SAGA\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}