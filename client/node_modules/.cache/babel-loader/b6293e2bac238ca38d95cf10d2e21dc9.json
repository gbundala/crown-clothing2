{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielbundala/Desktop/crown-clothing2/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartSync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }\n    })) //the props in the render above are the history, match & location from the react-router ownProps\n    ;\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/src/pages/shop/shop.component.jsx"],"names":["React","Component","CollectionOverview","Route","CollectionPage","fetchCollectionsStartAsync","connect","WithSpinner","createStructuredSelector","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","props","fetchCollectionsStartSync","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACL,kBAAD,CAAlD;AACA,MAAMS,yBAAyB,GAAGJ,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBX,SAAvB,CAAiC;AAE7BY,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAER,MAAAA;AAAF,QAAiC,KAAKS,KAA5C;AAEAC,IAAAA,yBAAyB;AAE5B;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKJ,KAA7C;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACE,IAAK,EAFrB;AAGC,MAAA,MAAM,EAAGL,KAAD,iBACJ,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEI;AAA3C,SAAqEJ,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,eAQG,oBAAC,KAAD;AACC,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACE,IAAK,gBADrB;AAEC,MAAA,MAAM,EAAGL,KAAD,iBACJ,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEI;AAAtC,SAAgEJ,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARH,CADJ,CAgBI;AAhBJ;AAkBH;;AA9B4B;;AA+BhC;AAED,MAAMM,eAAe,GAAGZ,wBAAwB,CAAC;AAC7CU,EAAAA,oBAAoB,EAAET;AADuB,CAAD,CAAhD;;AAIA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeC,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n    \n    componentDidMount() {\n        const { fetchCollectionsStartAsync } = this.props;\n\n        fetchCollectionsStartSync();\n        \n    };\n\n    render() {\n        const { match, isCollectionFetching } = this.props;\n\n        return (\n            <div className='shop-page'>\n               <Route \n                exact \n                path={`${match.path}`} \n                render={(props) => (\n                    <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />\n                )}\n                />\n               <Route \n                path={`${match.path}/:collectionId`} \n                render={(props) => (\n                    <CollectionPageWithSpinner isLoading={isCollectionFetching} {...props} />\n                )}\n                />  \n            </div>\n            //the props in the render above are the history, match & location from the react-router ownProps\n        );\n    };\n};\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}