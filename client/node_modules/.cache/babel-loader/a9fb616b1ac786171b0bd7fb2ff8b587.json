{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielbundala/Documents/crown-clothing2/client/src/components/header/header.component.jsx\";\nimport React from \"react\";\nimport \"./header.styles.scss\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/crown.svg\";\nimport { connect } from \"react-redux\";\nimport CartIcon from \"../cart-icon/cart-icon.component\";\nimport CartDropdown from \"../cart-dropdown/cart-dropdown.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\nimport { selectCartHidden } from \"../../redux/cart/cart.selectors\";\nimport { signOutStart } from \"../../redux/user/user.actions\";\nimport LikedIcon from \"../liked-icon/liked-icon.component\";\nimport LikedDropdown from \"../liked-dropdown/liked-dropdown.component\";\nimport { selectLikedHidden } from \"../../redux/liked/liked.selectors\";\nimport { toggleLikedHidden } from \"../../redux/liked/liked.actions\";\n\nconst Header = ({\n  currentUser,\n  hidden,\n  hiddenLiked,\n  signOutStart,\n  toggleLikedHidden\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"logo-container\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"option\",\n    to: \"/shop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"SHOP\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"option\",\n    to: \"/contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"CONTACT\"), currentUser ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option\",\n    onClick: signOutStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"SIGN OUT\") : /*#__PURE__*/React.createElement(Link, {\n    className: \"option\",\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"SIGN IN\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"option\",\n    to: \"/seller\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"SELLER\"), /*#__PURE__*/React.createElement(CartIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LikedIcon, {\n    onClick: toggleLikedHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), hidden ? null : /*#__PURE__*/React.createElement(CartDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 24\n    }\n  }), hiddenLiked ? null : /*#__PURE__*/React.createElement(LikedDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }));\n}; //this is the function that allows us to access the state from reducers.\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  hidden: selectCartHidden,\n  hiddenLiked: selectLikedHidden\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signOutStart: () => dispatch(signOutStart()),\n  toggleLikedHidden: () => dispatch(toggleLikedHidden())\n}); // state.user.currentUser is destructured\n//we destructure user off of state and what we want is currentUser\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header); //connect is a higher order component (HOC) that lets us modify\n//our react components to lets us have access to redux stuff in our\n//react components (to things related to redux)\n//a HOC is a component that takes in another component as its parameter\n//and returns a 'supped up' component; in this case -- one that can\n//take things related to redux hence the ability of the header component\n//to connet to reducers and pull in the 'currentUser' state\n//NOTE: we are getting the state from the root reducer, that pulls\n//from the user reducer that ultimately gets its state updated from\n//the actions of the 'user.actions.js'.\n//the mapStateToProps and reducers we will use anywhere that\n//we would need props from our reducers","map":{"version":3,"sources":["/Users/gabrielbundala/Documents/crown-clothing2/client/src/components/header/header.component.jsx"],"names":["React","Link","connect","CartIcon","CartDropdown","createStructuredSelector","selectCurrentUser","selectCartHidden","signOutStart","LikedIcon","LikedDropdown","selectLikedHidden","toggleLikedHidden","Header","currentUser","hidden","hiddenLiked","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,aAAP,MAA0B,4CAA1B;AACA,SAASC,iBAAT,QAAkC,mCAAlC;AACA,SAASC,iBAAT,QAAkC,iCAAlC;;AAEA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,WADc;AAEdC,EAAAA,MAFc;AAGdC,EAAAA,WAHc;AAIdR,EAAAA,YAJc;AAKdI,EAAAA;AALc,CAAD,KAMT;AACJ,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,EAAE,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAOGE,WAAW,gBACV;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,OAAO,EAAEN,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADU,gBAKV,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAZJ,eAiBE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eAoBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,eAqBE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEI,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CAJF,EA2BGG,MAAM,GAAG,IAAH,gBAAU,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BnB,EA4BGC,WAAW,GAAG,IAAH,gBAAU,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BxB,CADF;AAgCD,CAvCD,C,CAyCA;;;AACA,MAAMC,eAAe,GAAGZ,wBAAwB,CAAC;AAC/CS,EAAAA,WAAW,EAAER,iBADkC;AAE/CS,EAAAA,MAAM,EAAER,gBAFuC;AAG/CS,EAAAA,WAAW,EAAEL;AAHkC,CAAD,CAAhD;;AAMA,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACxCX,EAAAA,YAAY,EAAE,MAAMW,QAAQ,CAACX,YAAY,EAAb,CADY;AAExCI,EAAAA,iBAAiB,EAAE,MAAMO,QAAQ,CAACP,iBAAiB,EAAlB;AAFO,CAAf,CAA3B,C,CAIA;AACA;;;AAEA,eAAeV,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CL,MAA7C,CAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport \"./header.styles.scss\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as Logo } from \"../../assets/crown.svg\";\nimport { connect } from \"react-redux\";\nimport CartIcon from \"../cart-icon/cart-icon.component\";\nimport CartDropdown from \"../cart-dropdown/cart-dropdown.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\nimport { selectCartHidden } from \"../../redux/cart/cart.selectors\";\nimport { signOutStart } from \"../../redux/user/user.actions\";\nimport LikedIcon from \"../liked-icon/liked-icon.component\";\nimport LikedDropdown from \"../liked-dropdown/liked-dropdown.component\";\nimport { selectLikedHidden } from \"../../redux/liked/liked.selectors\";\nimport { toggleLikedHidden } from \"../../redux/liked/liked.actions\";\n\nconst Header = ({\n  currentUser,\n  hidden,\n  hiddenLiked,\n  signOutStart,\n  toggleLikedHidden,\n}) => {\n  return (\n    <div className=\"header\">\n      <Link className=\"logo-container\" to=\"/\">\n        <Logo className=\"logo\" />\n      </Link>\n      <div className=\"options\">\n        <Link className=\"option\" to=\"/shop\">\n          SHOP\n        </Link>\n        <Link className=\"option\" to=\"/contact\">\n          CONTACT\n        </Link>\n        {currentUser ? (\n          <div className=\"option\" onClick={signOutStart}>\n            SIGN OUT\n          </div>\n        ) : (\n          <Link className=\"option\" to=\"/signin\">\n            SIGN IN\n          </Link>\n        )}\n        {/* TODO: Create the functionality that will assign an identifier token to the user -- as prop called seller. the page will be used to sign up sellers */}\n        <Link className=\"option\" to=\"/seller\">\n          SELLER\n        </Link>\n        <CartIcon />\n        <LikedIcon onClick={toggleLikedHidden} />\n      </div>\n      {hidden ? null : <CartDropdown />}\n      {hiddenLiked ? null : <LikedDropdown />}\n    </div>\n  );\n};\n\n//this is the function that allows us to access the state from reducers.\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  hidden: selectCartHidden,\n  hiddenLiked: selectLikedHidden,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  signOutStart: () => dispatch(signOutStart()),\n  toggleLikedHidden: () => dispatch(toggleLikedHidden()),\n});\n// state.user.currentUser is destructured\n//we destructure user off of state and what we want is currentUser\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n\n//connect is a higher order component (HOC) that lets us modify\n//our react components to lets us have access to redux stuff in our\n//react components (to things related to redux)\n//a HOC is a component that takes in another component as its parameter\n//and returns a 'supped up' component; in this case -- one that can\n//take things related to redux hence the ability of the header component\n//to connet to reducers and pull in the 'currentUser' state\n//NOTE: we are getting the state from the root reducer, that pulls\n//from the user reducer that ultimately gets its state updated from\n//the actions of the 'user.actions.js'.\n//the mapStateToProps and reducers we will use anywhere that\n//we would need props from our reducers\n"]},"metadata":{},"sourceType":"module"}