{"ast":null,"code":"import _regeneratorRuntime from\"/Users/gabrielbundala/Desktop/crown-clothing2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/gabrielbundala/Desktop/crown-clothing2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/gabrielbundala/Desktop/crown-clothing2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/gabrielbundala/Desktop/crown-clothing2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/gabrielbundala/Desktop/crown-clothing2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/gabrielbundala/Desktop/crown-clothing2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/gabrielbundala/Desktop/crown-clothing2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./App.css';import HomePage from'./pages/homepage/homepage.component';import Header from'./components/header/header.component';import ShopPage from'./pages/shop/shop.component';import SignInAndSignUpPage from'./pages/sign-in-and-sign-up/sign-in-and-sign-up.component';import{Route,Switch,Redirect}from'react-router-dom';import{auth,createUserProfileDocument}from'./firebase/firebase.utils';import{connect}from'react-redux';import{setCurrentUser as _setCurrentUser}from'./redux/user/user.actions';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.unsubscribeFromAuth=null;return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var setCurrentUser=this.props.setCurrentUser;//below is an open subscription which is basically an open\n//messaging system btn our App and our FirebaseApp.\n//We don't have to fetch everytime our component mounts \n//as long as the user session is still on it connects automatically.\nthis.unsubscribeFromAuth=auth.onAuthStateChanged(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth){var userRef;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!userAuth){_context.next=5;break;}_context.next=3;return createUserProfileDocument(userAuth);case 3:userRef=_context.sent;//below we use this.props.setCurrentUser inplace of this.setState\n//as we no longer have the constructor. Note: this.props is destructured above!\nuserRef.onSnapshot(function(snapShot){setCurrentUser(_objectSpread({id:snapShot.id},snapShot.data()));});case 5:setCurrentUser(userAuth);case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());}//as we don't want to have any memory leaks in our app,\n//the subscription will close when the component unmounts\n},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.unsubscribeFromAuth();}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/\",component:HomePage}),/*#__PURE__*/React.createElement(Route,{path:\"/shop\",component:ShopPage}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/signin\",render:function render(){return _this2.props.currentUser?/*#__PURE__*/React.createElement(Redirect,{to:\"/\"}):/*#__PURE__*/React.createElement(SignInAndSignUpPage,null);}})));}}]);return App;}(Component);;var mapStateToProps=function mapStateToProps(_ref2){var user=_ref2.user;return{currentUser:user.currentUser//we get access to this.props.currrentUser after putting into connect below\n};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{setCurrentUser:function setCurrentUser(user){return dispatch(_setCurrentUser(user));}};};export default connect(mapStateToProps,mapDispatchToProps)(App);//connect has two arguments\n//mapDispatchToProps is the second argument \n//we have put the first argument to null as we dont need \n//mapStateToProps in Appjs as there is no where in here\n//that we have used the state of the current user\n//hence what we only need here is to send the update of the state\n//to the 'user.actions.js'\n//we dont need the constructor anymore, hence we have remove it!\n//UPDATE: Initially we had null as the first argument in connect()\n//but since we have implemented React Router Redirect to have \n//the app remove the signIn page after use signs in we have \n//therefore needed state in the Appjs file there the \n//mapStateToProp function and implementation.","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/src/App.js"],"names":["React","Component","HomePage","Header","ShopPage","SignInAndSignUpPage","Route","Switch","Redirect","auth","createUserProfileDocument","connect","setCurrentUser","App","unsubscribeFromAuth","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","currentUser","mapStateToProps","user","mapDispatchToProps","dispatch"],"mappings":"wmCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAO,WAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,qCAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sCAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,2DAAhC,CAEA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,QAAxB,KAAwC,kBAAxC,CACA,OAASC,IAAT,CAAeC,yBAAf,KAAgD,2BAAhD,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,cAAc,GAAdA,CAAAA,eAAT,KAA+B,2BAA/B,C,GAEMC,CAAAA,G,+SAEJC,mB,CAAsB,I,4FAEF,IACVF,CAAAA,cADU,CACS,KAAKG,KADd,CACVH,cADU,CAElB;AACA;AACA;AACA;AACA,KAAKE,mBAAL,CAA2BL,IAAI,CAACO,kBAAL,0FAAwB,iBAAMC,QAAN,kIAC7CA,QAD6C,+CAEzBP,CAAAA,yBAAyB,CAACO,QAAD,CAFA,QAEzCC,OAFyC,eAI/C;AACA;AACAA,OAAO,CAACC,UAAR,CAAmB,SAAAC,QAAQ,CAAI,CAC7BR,cAAc,gBACZS,EAAE,CAAED,QAAQ,CAACC,EADD,EAETD,QAAQ,CAACE,IAAT,EAFS,EAAd,CAID,CALD,EAN+C,OAcjDV,cAAc,CAACK,QAAD,CAAd,CAdiD,sDAAxB,+DAA3B,CAiBD,CAED;AACA;mEACuB,CACrB,KAAKH,mBAAL,GACD,C,uCAEQ,iBACP,mBACE,4CACE,oBAAC,MAAD,MADF,cAEE,oBAAC,MAAD,mBACE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEZ,QAAjC,EADF,cAEE,oBAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,CAAoB,SAAS,CAAEE,QAA/B,EAFF,cAGE,oBAAC,KAAD,EACE,KAAK,KADP,CAEE,IAAI,CAAC,SAFP,CAGE,MAAM,CAAE,wBACN,CAAA,MAAI,CAACW,KAAL,CAAWQ,WAAX,cACE,oBAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EADF,cAGE,oBAAC,mBAAD,MAJI,EAHV,EAHF,CAFF,CADF,CAoBD,C,iBAxDetB,S,EAyDjB,CAED,GAAMuB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,WAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAe,CACrCF,WAAW,CAAEE,IAAI,CAACF,WAAW;AADQ,CAAf,EAAxB,CAIA,GAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCf,cAAc,CAAE,wBAAAa,IAAI,QAAIE,CAAAA,QAAQ,CAACf,eAAc,CAACa,IAAD,CAAf,CAAZ,EADkB,CAAL,EAAnC,CAIA,cAAed,CAAAA,OAAO,CAACa,eAAD,CAAkBE,kBAAlB,CAAP,CAA8Cb,GAA9C,CAAf,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport Header from './components/header/header.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\n\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.actions';\n\nclass App extends Component {\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    const { setCurrentUser } = this.props\n    //below is an open subscription which is basically an open\n    //messaging system btn our App and our FirebaseApp.\n    //We don't have to fetch everytime our component mounts \n    //as long as the user session is still on it connects automatically.\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        //below we use this.props.setCurrentUser inplace of this.setState\n        //as we no longer have the constructor. Note: this.props is destructured above!\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()//STUDYME!\n          });\n        });\n      } \n      \n      setCurrentUser(userAuth);\n      \n    });\n  }\n\n  //as we don't want to have any memory leaks in our app,\n  //the subscription will close when the component unmounts\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={HomePage}/>\n          <Route path='/shop' component={ShopPage} />\n          <Route \n            exact \n            path='/signin' \n            render={() => \n              this.props.currentUser ? (\n                <Redirect to='/' />\n              ) : (\n                <SignInAndSignUpPage />\n              )\n            } \n          />\n        </Switch>\n      </div>\n    );\n  };\n};\n\nconst mapStateToProps = ({ user }) => ({\n  currentUser: user.currentUser//we get access to this.props.currrentUser after putting into connect below\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps )(App);\n\n//connect has two arguments\n//mapDispatchToProps is the second argument \n//we have put the first argument to null as we dont need \n//mapStateToProps in Appjs as there is no where in here\n//that we have used the state of the current user\n//hence what we only need here is to send the update of the state\n//to the 'user.actions.js'\n//we dont need the constructor anymore, hence we have remove it!\n//UPDATE: Initially we had null as the first argument in connect()\n//but since we have implemented React Router Redirect to have \n//the app remove the signIn page after use signs in we have \n//therefore needed state in the Appjs file there the \n//mapStateToProp function and implementation.\n"]},"metadata":{},"sourceType":"module"}