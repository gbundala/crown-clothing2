{"ast":null,"code":"import React from'react';import'./header.styles.scss';import{Link}from'react-router-dom';import{ReactComponent as Logo}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/crown.svg\";import{auth}from'../../firebase/firebase.utils';import{connect}from'react-redux';import CartIcon from'../cart-icon/cart-icon.component';import CartDropdown from'../cart-dropdown/cart-dropdown.component';var Header=function Header(_ref){var currentUser=_ref.currentUser,hidden=_ref.hidden;return/*#__PURE__*/React.createElement(\"div\",{className:\"header\"},/*#__PURE__*/React.createElement(Link,{className:\"logo-container\",to:\"/\"},/*#__PURE__*/React.createElement(Logo,{className:\"logo\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"options\"},/*#__PURE__*/React.createElement(Link,{className:\"option\",to:\"/shop\"},\"SHOP\"),/*#__PURE__*/React.createElement(Link,{className:\"option\",to:\"/contact\"},\"CONTACT\"),currentUser?/*#__PURE__*/React.createElement(\"div\",{className:\"option\",onClick:function onClick(){return auth.signOut();}},\"SIGN OUT\"):/*#__PURE__*/React.createElement(Link,{className:\"option\",to:\"/signin\"},\"SIGN IN\"),/*#__PURE__*/React.createElement(CartIcon,null)),hidden?null:/*#__PURE__*/React.createElement(CartDropdown,null));};//this is the function that allows us to access the state from reducers.\nvar mapStateToProps=function mapStateToProps(_ref2){var currentUser=_ref2.user.currentUser,hidden=_ref2.cart.hidden;return{currentUser:currentUser,hidden:hidden};};// state.user.currentUser is destructured \n//we destructure user off of state and what we want is currentUser\nexport default connect(mapStateToProps)(Header);//connect is a higher order component (HOC) that lets us modify \n//our react components to lets us have access to redux stuff in our\n//react components (to things related to redux)\n//a HOC is a component that takes in another component as its parameter\n//and returns a 'supped up' component; in this case -- one that can\n//take things related to redux hence the ability of the header component \n//to connet to reducers and pull in the 'currentUser' state\n//NOTE: we are getting the state from the root reducer, that pulls\n//from the user reducer that ultimately gets its state updated from\n//the actions of the 'user.actions.js'.\n//the mapStateToProps and reducers we will use anywhere that \n//we would need props from our reducers","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/src/components/header/header.component.jsx"],"names":["React","Link","auth","connect","CartIcon","CartDropdown","Header","currentUser","hidden","signOut","mapStateToProps","user","cart"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,sBAAP,CACA,OAASC,IAAT,KAAqB,kBAArB,C,+FAEA,OAASC,IAAT,KAAqB,+BAArB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kCAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA6B,IAA1BC,CAAAA,WAA0B,MAA1BA,WAA0B,CAAbC,MAAa,MAAbA,MAAa,CACxC,mBACI,2BAAK,SAAS,CAAC,QAAf,eACI,oBAAC,IAAD,EAAM,SAAS,CAAC,gBAAhB,CAAiC,EAAE,CAAC,GAApC,eACI,oBAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,EADJ,CADJ,cAII,2BAAK,SAAS,CAAC,SAAf,eACI,oBAAC,IAAD,EAAM,SAAS,CAAC,QAAhB,CAAyB,EAAE,CAAC,OAA5B,SADJ,cAII,oBAAC,IAAD,EAAM,SAAS,CAAC,QAAhB,CAAyB,EAAE,CAAC,UAA5B,YAJJ,CAQQD,WAAW,cACX,2BAAK,SAAS,CAAC,QAAf,CAAwB,OAAO,CAAE,yBAAML,CAAAA,IAAI,CAACO,OAAL,EAAN,EAAjC,aADW,cAGX,oBAAC,IAAD,EAAM,SAAS,CAAC,QAAhB,CAAyB,EAAE,CAAC,SAA5B,YAXR,cAeI,oBAAC,QAAD,MAfJ,CAJJ,CAqBKD,MAAM,CAAG,IAAH,cAAU,oBAAC,YAAD,MArBrB,CADJ,CAyBH,CA1BD,CA4BA;AACA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,WAASH,CAAAA,WAAT,OAAEI,IAAF,CAASJ,WAAT,CAA8BC,MAA9B,OAAuBI,IAAvB,CAA8BJ,MAA9B,OAA4C,CAChED,WAAW,CAAXA,WADgE,CAEhEC,MAAM,CAANA,MAFgE,CAA5C,EAAxB,CAIA;AACA;AAEA,cAAeL,CAAAA,OAAO,CAACO,eAAD,CAAP,CAAyBJ,MAAzB,CAAf,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport './header.styles.scss';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as Logo } from '../../assets/crown.svg';\nimport { auth } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport CartIcon from '../cart-icon/cart-icon.component';\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\n\nconst Header = ({ currentUser, hidden }) => {\n    return (\n        <div className='header'>\n            <Link className='logo-container' to='/'>\n                <Logo className='logo' />\n            </Link>\n            <div className='options'>\n                <Link className='option' to='/shop'>\n                    SHOP\n                </Link>\n                <Link className='option' to='/contact'>\n                    CONTACT\n                </Link>\n                {\n                    currentUser ? (\n                    <div className='option' onClick={() => auth.signOut()}>SIGN OUT</div> \n                    ) : (\n                    <Link className='option' to='/signin'>\n                        SIGN IN\n                    </Link>)\n                }\n                <CartIcon /> \n            </div>\n            {hidden ? null : <CartDropdown />}\n        </div>\n    );\n}\n\n//this is the function that allows us to access the state from reducers.\nconst mapStateToProps = ({user: {currentUser}, cart: {hidden}}) => ({\n    currentUser,\n    hidden,\n});\n// state.user.currentUser is destructured \n//we destructure user off of state and what we want is currentUser\n\nexport default connect(mapStateToProps)(Header);\n\n//connect is a higher order component (HOC) that lets us modify \n//our react components to lets us have access to redux stuff in our\n//react components (to things related to redux)\n//a HOC is a component that takes in another component as its parameter\n//and returns a 'supped up' component; in this case -- one that can\n//take things related to redux hence the ability of the header component \n//to connet to reducers and pull in the 'currentUser' state\n//NOTE: we are getting the state from the root reducer, that pulls\n//from the user reducer that ultimately gets its state updated from\n//the actions of the 'user.actions.js'.\n//the mapStateToProps and reducers we will use anywhere that \n//we would need props from our reducers"]},"metadata":{},"sourceType":"module"}