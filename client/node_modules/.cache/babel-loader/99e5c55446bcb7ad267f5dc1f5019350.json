{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQty, cartItem) => accumulatedQty + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedValue, cartItem) => accumulatedValue + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/gabrielbundala/Documents/crown-clothing2/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQty","cartItem","quantity","selectCartTotal","accumulatedValue","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAEzCE,IAAI,IAAIA,IAAI,CAACE,SAF4B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,MAF6B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IACLA,SAAS,CAACI,MAAV,CACI,CAACC,cAAD,EAAiBC,QAAjB,KACID,cAAc,GAAGC,QAAQ,CAACC,QAFlC,EAGI,CAHJ,CAH0C,CAA3C;AAUP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IACLA,SAAS,CAACI,MAAV,CACI,CAACK,gBAAD,EAAmBH,QAAnB,KACIG,gBAAgB,GAAIH,QAAQ,CAACC,QAAT,GAAkBD,QAAQ,CAACI,KAFvD,EAGI,CAHJ,CAHqC,CAAtC","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart],\n    cart => cart.cartItems\n);\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    cart => cart.hidden\n);\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    cartItems => \n        cartItems.reduce(\n            (accumulatedQty, cartItem) => \n                accumulatedQty + cartItem.quantity, \n            0\n        )\n);\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    cartItems => \n        cartItems.reduce(\n            (accumulatedValue, cartItem) => \n                accumulatedValue + (cartItem.quantity*cartItem.price), \n            0\n        )\n);"]},"metadata":{},"sourceType":"module"}