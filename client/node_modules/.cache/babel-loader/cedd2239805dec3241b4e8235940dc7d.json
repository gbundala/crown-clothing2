{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport directoryReducer from \"./directory/directory.reducer\";\nimport shopReducer from \"./shop/shop.reducer\";\nconst persistConfig = {\n  key: 'root',\n  //essentially at what point in our reducer we want to start storing -- from the root \n  storage,\n  //this is essentiall the same as writing storage: storage\n  whitelist: ['cart'] //all we want to persist is the cart for now as the user is already handled by firebase\n\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n});\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","directoryReducer","shopReducer","persistConfig","key","whitelist","rootReducer","user","cart","directory","shop"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AACL;AACbN,EAAAA,OAFkB;AAET;AACTO,EAAAA,SAAS,EAAE,CAAC,MAAD,CAHO,CAGE;;AAHF,CAAtB;AAMA,MAAMC,WAAW,GAAGV,eAAe,CAAC;AAChCW,EAAAA,IAAI,EAAER,WAD0B;AAEhCS,EAAAA,IAAI,EAAER,WAF0B;AAGhCS,EAAAA,SAAS,EAAER,gBAHqB;AAIhCS,EAAAA,IAAI,EAAER;AAJ0B,CAAD,CAAnC;AAOA,eAAeL,cAAc,CAACM,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from \"redux\";\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport directoryReducer from \"./directory/directory.reducer\";\nimport shopReducer from \"./shop/shop.reducer\";\n\nconst persistConfig = {\n    key: 'root', //essentially at what point in our reducer we want to start storing -- from the root \n    storage, //this is essentiall the same as writing storage: storage\n    whitelist: ['cart'] //all we want to persist is the cart for now as the user is already handled by firebase\n};\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    cart: cartReducer,\n    directory: directoryReducer,\n    shop: shopReducer,\n});\n\nexport default persistReducer(persistConfig, rootReducer);"]},"metadata":{},"sourceType":"module"}