{"ast":null,"code":"import _objectSpread from\"/Users/gabrielbundala/Desktop/crown-clothing2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";//LEARN: A reducer is simply a function that received 2 things\n//1. it receives the current/initial state\n//2. it receives the action\n//Actions just simply have type & payload.\nimport{UserActionTypes}from\"./user.types\";var INITIAL_STATE={currentUser:null};var userReducer=function userReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INITIAL_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case UserActionTypes.SET_CURRENT_USER:return _objectSpread(_objectSpread({},state),{},{//we spread everything else in state prop\ncurrentUser:action.payload});default:return state;};};export default userReducer;//every single reducer gets every single action that gets fired \n//even if it does not relate to the reducer. Hence the default switch\n//back to state (parameter).","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/src/redux/user/user.reducer.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","userReducer","state","action","type","SET_CURRENT_USER","payload"],"mappings":"mKAAA;AACA;AACA;AACA;AAEA,OAASA,eAAT,KAAgC,cAAhC,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,WAAW,CAAE,IADK,CAAtB,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAmC,IAAlCC,CAAAA,KAAkC,2DAA1BH,aAA0B,IAAXI,CAAAA,MAAW,2CACnD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKN,CAAAA,eAAe,CAACO,gBAArB,CACI,sCACOH,KADP,MACc;AACVF,WAAW,CAAEG,MAAM,CAACG,OAFxB,GAIJ,QACI,MAAOJ,CAAAA,KAAP,CAPR,CAQC,CACJ,CAVD,CAYA,cAAeD,CAAAA,WAAf,CAEA;AACA;AACA","sourcesContent":["//LEARN: A reducer is simply a function that received 2 things\n//1. it receives the current/initial state\n//2. it receives the action\n//Actions just simply have type & payload.\n\nimport { UserActionTypes } from \"./user.types\";\n\nconst INITIAL_STATE = {\n    currentUser: null,\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case UserActionTypes.SET_CURRENT_USER:\n            return {\n                ...state, //we spread everything else in state prop\n                currentUser: action.payload\n            };\n        default: \n            return state;\n    };\n};\n\nexport default userReducer;\n\n//every single reducer gets every single action that gets fired \n//even if it does not relate to the reducer. Hence the default switch\n//back to state (parameter)."]},"metadata":{},"sourceType":"module"}