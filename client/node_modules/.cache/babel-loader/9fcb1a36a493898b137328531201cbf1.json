{"ast":null,"code":"import UserActionTypes from \"./user.types\";\nexport const signInSuccess = user => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  //this string should never change (hence the use of capital & snake case_)\n  payload: user\n});\nexport const signInFailure = error => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error\n}); //EMAIL SIGN IN START\n\nexport const emailSignInStart = emailAndPassword => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword\n}); //GOOGLE SIGN IN START\n\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\n}); //SESSION PERSISTENCE\n\nexport const checkUserSession = () => ({\n  type: UserActionTypes.CHECK_USER_SESSION\n});","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/src/redux/user/user.actions.js"],"names":["UserActionTypes","signInSuccess","user","type","SIGN_IN_SUCCESS","payload","signInFailure","error","SIGN_IN_FAILURE","emailSignInStart","emailAndPassword","EMAIL_SIGN_IN_START","googleSignInStart","GOOGLE_SIGN_IN_START","checkUserSession","CHECK_USER_SESSION"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,OAAO,MAAMC,aAAa,GAAIC,IAAD,KAAW;AACtCC,EAAAA,IAAI,EAAEH,eAAe,CAACI,eADgB;AACC;AACvCC,EAAAA,OAAO,EAAEH;AAF6B,CAAX,CAAtB;AAKP,OAAO,MAAMI,aAAa,GAAIC,KAAD,KAAY;AACvCJ,EAAAA,IAAI,EAAEH,eAAe,CAACQ,eADiB;AAEvCH,EAAAA,OAAO,EAAEE;AAF8B,CAAZ,CAAtB,C,CAKP;;AACA,OAAO,MAAME,gBAAgB,GAAIC,gBAAD,KAAuB;AACrDP,EAAAA,IAAI,EAAEH,eAAe,CAACW,mBAD+B;AAErDN,EAAAA,OAAO,EAAEK;AAF4C,CAAvB,CAAzB,C,CAKP;;AACA,OAAO,MAAME,iBAAiB,GAAG,OAAO;AACtCT,EAAAA,IAAI,EAAEH,eAAe,CAACa;AADgB,CAAP,CAA1B,C,CAIP;;AACA,OAAO,MAAMC,gBAAgB,GAAG,OAAO;AACrCX,EAAAA,IAAI,EAAEH,eAAe,CAACe;AADe,CAAP,CAAzB","sourcesContent":["import UserActionTypes from \"./user.types\";\n\nexport const signInSuccess = (user) => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS, //this string should never change (hence the use of capital & snake case_)\n  payload: user,\n});\n\nexport const signInFailure = (error) => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error,\n});\n\n//EMAIL SIGN IN START\nexport const emailSignInStart = (emailAndPassword) => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword,\n});\n\n//GOOGLE SIGN IN START\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START,\n});\n\n//SESSION PERSISTENCE\nexport const checkUserSession = () => ({\n  type: UserActionTypes.CHECK_USER_SESSION,\n});\n"]},"metadata":{},"sourceType":"module"}