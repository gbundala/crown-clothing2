{"ast":null,"code":"//this is where we store all firebase utilities files or methods\n//below is the config object that we import from the firebase\n//utilities library\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBjUDdfvHbQXYWM4_mypKG_JE2MIm9r7mU\",\n  authDomain: \"crown-db2-79d4d.firebaseapp.com\",\n  databaseURL: \"https://crown-db2-79d4d.firebaseio.com\",\n  projectId: \"crown-db2-79d4d\",\n  storageBucket: \"crown-db2-79d4d.appspot.com\",\n  messagingSenderId: \"507911018338\",\n  appId: \"1:507911018338:web:3c3d5c1c4aa9fad1b7be3b\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionKey);\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); //Gives us access to the auth provider class from authentication library\n\nconst provider = new firebase.auth.GoogleAuthProvider(); //prompt gives us the promp UI for user to select google account to authorise\n\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,iCAFD;AAGXC,EAAAA,WAAW,EAAE,wCAHF;AAIXC,EAAAA,SAAS,EAAE,iBAJA;AAKXC,EAAAA,aAAa,EAAE,6BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE;AAPI,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAqB;AACjB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAMa,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACJ;;AAED,SAAOf,OAAP;AACH,CAxBM;AA0BP,OAAO,MAAMgB,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACtE,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAAtB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,aAAZ;AACH,CAHM;AAKP7B,QAAQ,CAACiC,aAAT,CAAuBhC,MAAvB;AAEA,OAAO,MAAMiC,IAAI,GAAGlC,QAAQ,CAACkC,IAAT,EAAb;AACP,OAAO,MAAMrB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB,C,CAEP;;AACA,MAAMsB,QAAQ,GAAG,IAAInC,QAAQ,CAACkC,IAAT,CAAcE,kBAAlB,EAAjB,C,CACA;;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAenC,QAAf","sourcesContent":["//this is where we store all firebase utilities files or methods\n//below is the config object that we import from the firebase\n//utilities library\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBjUDdfvHbQXYWM4_mypKG_JE2MIm9r7mU\",\n    authDomain: \"crown-db2-79d4d.firebaseapp.com\",\n    databaseURL: \"https://crown-db2-79d4d.firebaseio.com\",\n    projectId: \"crown-db2-79d4d\",\n    storageBucket: \"crown-db2-79d4d.appspot.com\",\n    messagingSenderId: \"507911018338\",\n    appId: \"1:507911018338:web:3c3d5c1c4aa9fad1b7be3b\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    const snapShot = await userRef.get();\n\n    if(!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        } catch(error) {\n            console.log('error creating user', error.message);\n        }\n    }\n\n    return userRef;\n};\n\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n    console.log(collectionKey)\n}\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n//Gives us access to the auth provider class from authentication library\nconst provider = new firebase.auth.GoogleAuthProvider();\n//prompt gives us the promp UI for user to select google account to authorise\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}