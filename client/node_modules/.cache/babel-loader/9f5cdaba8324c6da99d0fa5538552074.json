{"ast":null,"code":"import _regeneratorRuntime from\"/Users/gabrielbundala/Desktop/crown-clothing2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/gabrielbundala/Desktop/crown-clothing2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/gabrielbundala/Desktop/crown-clothing2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";//this is where we store all firebase utilities files or methods\n//below is the config object that we import from the firebase\n//utilities library\nimport firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyBjUDdfvHbQXYWM4_mypKG_JE2MIm9r7mU\",authDomain:\"crown-db2-79d4d.firebaseapp.com\",databaseURL:\"https://crown-db2-79d4d.firebaseio.com\",projectId:\"crown-db2-79d4d\",storageBucket:\"crown-db2-79d4d.appspot.com\",messagingSenderId:\"507911018338\",appId:\"1:507911018338:web:3c3d5c1c4aa9fad1b7be3b\"};export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('error creating user',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();firebase.initializeApp(config);export var auth=firebase.auth();export var firestore=firebase.firestore();//Gives us access to the auth provider class from authentication library\nvar provider=new firebase.auth.GoogleAuthProvider();//prompt gives us the promp UI for user to select google account to authorise\nprovider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(provider);};export default firebase;","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"weAAA;AACA;AACA;AAEA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,oBAAP,CACA,MAAO,eAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACXC,MAAM,CAAE,yCADG,CAEXC,UAAU,CAAE,iCAFD,CAGXC,WAAW,CAAE,wCAHF,CAIXC,SAAS,CAAE,iBAJA,CAKXC,aAAa,CAAE,6BALJ,CAMXC,iBAAiB,CAAE,cANR,CAOXC,KAAK,CAAE,2CAPI,CAAf,CAUA,MAAO,IAAMC,CAAAA,yBAAyB,0FAAG,iBAAOC,QAAP,CAAiBC,cAAjB,sKAChCD,QADgC,iEAG/BE,OAH+B,CAGrBC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAHqB,uBAKdH,CAAAA,OAAO,CAACI,GAAR,EALc,QAK/BC,QAL+B,kBAOjCA,QAAQ,CAACC,MAPwB,0BAQzBC,WARyB,CAQFT,QARE,CAQzBS,WARyB,CAQZC,KARY,CAQFV,QARE,CAQZU,KARY,CAS3BC,SAT2B,CASf,GAAIC,CAAAA,IAAJ,EATe,wCAYvBV,CAAAA,OAAO,CAACW,GAAR,gBACFJ,WAAW,CAAXA,WADE,CAEFC,KAAK,CAALA,KAFE,CAGFC,SAAS,CAATA,SAHE,EAICV,cAJD,EAZuB,0FAmB7Ba,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmC,YAAMC,OAAzC,EAnB6B,wCAuB9Bd,OAvB8B,uEAAH,kBAAzBH,CAAAA,yBAAyB,gDAA/B,CA0BPT,QAAQ,CAAC2B,aAAT,CAAuB1B,MAAvB,EAEA,MAAO,IAAM2B,CAAAA,IAAI,CAAG5B,QAAQ,CAAC4B,IAAT,EAAb,CACP,MAAO,IAAMf,CAAAA,SAAS,CAAGb,QAAQ,CAACa,SAAT,EAAlB,CAEP;AACA,GAAMgB,CAAAA,QAAQ,CAAG,GAAI7B,CAAAA,QAAQ,CAAC4B,IAAT,CAAcE,kBAAlB,EAAjB,CACA;AACAD,QAAQ,CAACE,mBAAT,CAA6B,CAAEC,MAAM,CAAE,gBAAV,CAA7B,EACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAML,CAAAA,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAN,EAAzB,CAEP,cAAe7B,CAAAA,QAAf","sourcesContent":["//this is where we store all firebase utilities files or methods\n//below is the config object that we import from the firebase\n//utilities library\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBjUDdfvHbQXYWM4_mypKG_JE2MIm9r7mU\",\n    authDomain: \"crown-db2-79d4d.firebaseapp.com\",\n    databaseURL: \"https://crown-db2-79d4d.firebaseio.com\",\n    projectId: \"crown-db2-79d4d\",\n    storageBucket: \"crown-db2-79d4d.appspot.com\",\n    messagingSenderId: \"507911018338\",\n    appId: \"1:507911018338:web:3c3d5c1c4aa9fad1b7be3b\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    const snapShot = await userRef.get();\n\n    if(!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        } catch(error) {\n            console.log('error creating user', error.message);\n        }\n    }\n\n    return userRef;\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n//Gives us access to the auth provider class from authentication library\nconst provider = new firebase.auth.GoogleAuthProvider();\n//prompt gives us the promp UI for user to select google account to authorise\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}