{"ast":null,"code":"import logger from \"redux-logger\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./root-reducer\";\nimport { persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n} //we spread all the values/methods in the [logger] array in the method below\n//hence the ...middlewares spread operator!\n\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // sagaMiddleware.run()\n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/src/redux/store.js"],"names":["logger","createStore","applyMiddleware","rootReducer","persistStore","createSagaMiddleware","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,MAAMC,cAAc,GAAGD,oBAAoB,EAA3C;AAEA,MAAME,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBX,MAAjB;AACD,C,CAED;AACA;;;AACA,OAAO,MAAMY,KAAK,GAAGX,WAAW,CAACE,WAAD,EAAcD,eAAe,CAAC,GAAGK,WAAJ,CAA7B,CAAzB,C,CAEP;;AAEA,OAAO,MAAMM,SAAS,GAAGT,YAAY,CAACQ,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf","sourcesContent":["import logger from \"redux-logger\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./root-reducer\";\nimport { persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\n//we spread all the values/methods in the [logger] array in the method below\n//hence the ...middlewares spread operator!\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\n// sagaMiddleware.run()\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}