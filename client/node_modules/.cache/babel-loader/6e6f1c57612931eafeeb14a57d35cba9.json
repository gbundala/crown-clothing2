{"ast":null,"code":"import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nimport { onCartItemsStoreStart, storeCartItemsInFirebase } from \"../cart/cart.sagas\"; //FETCH COLLECTIONS FROM FIREBASE TO THE APP\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n} //STORING NEW COLLECTION ITEMS TO FIREBASE\n\nexport function* storeCollectionItemsInFirebaseAsync() {} //INITIALIZATION SAGA TO FETCH DATA FROM FIREBASE\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n} //INITIALIZATION SAGA (LISTENER) TO START STORING COLLECTION ITEMS IN FIREBASE\n\nexport function* onCollectionItemsStoreStart() {\n  yield takeLatest(ShopActionTypes.COLLECTION_ITEMS_STORE_START, storeCartItemsInFirebase);\n} //ROOT SHOP SAGA\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart), call(onCartItemsStoreStart)]);\n}","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/client/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsSuccess","fetchCollectionsFailure","onCartItemsStoreStart","storeCartItemsInFirebase","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","storeCollectionItemsInFirebaseAsync","fetchCollectionsStart","FETCH_COLLECTIONS_START","onCollectionItemsStoreStart","COLLECTION_ITEMS_STORE_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,+BADF,EAEEC,SAFF,QAGO,+BAHP;AAIA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAIA,SACEC,qBADF,EAEEC,wBAFF,QAGO,oBAHP,C,CAKA;;AACA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAC/BI,+BAD+B,EAE/BS,QAF+B,CAAjC;AAIA,UAAMZ,GAAG,CAACK,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMf,GAAG,CAACM,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF,C,CAED;;AACA,OAAO,UAAUC,mCAAV,GAAgD,CAAE,C,CAEzD;;AACA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMpB,UAAU,CACdI,eAAe,CAACiB,uBADF,EAEdV,qBAFc,CAAhB;AAID,C,CAED;;AACA,OAAO,UAAUW,2BAAV,GAAwC;AAC7C,QAAMtB,UAAU,CACdI,eAAe,CAACmB,4BADF,EAEdb,wBAFc,CAAhB;AAID,C,CAED;;AACA,OAAO,UAAUc,SAAV,GAAsB;AAC3B,QAAMrB,GAAG,CAAC,CAACF,IAAI,CAACmB,qBAAD,CAAL,EAA8BnB,IAAI,CAACQ,qBAAD,CAAlC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport {\n  convertCollectionsSnapshotToMap,\n  firestore,\n} from \"../../firebase/firebase.utils\";\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from \"./shop.actions\";\nimport {\n  onCartItemsStoreStart,\n  storeCartItemsInFirebase,\n} from \"../cart/cart.sagas\";\n\n//FETCH COLLECTIONS FROM FIREBASE TO THE APP\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\n//STORING NEW COLLECTION ITEMS TO FIREBASE\nexport function* storeCollectionItemsInFirebaseAsync() {}\n\n//INITIALIZATION SAGA TO FETCH DATA FROM FIREBASE\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n\n//INITIALIZATION SAGA (LISTENER) TO START STORING COLLECTION ITEMS IN FIREBASE\nexport function* onCollectionItemsStoreStart() {\n  yield takeLatest(\n    ShopActionTypes.COLLECTION_ITEMS_STORE_START,\n    storeCartItemsInFirebase\n  );\n}\n\n//ROOT SHOP SAGA\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart), call(onCartItemsStoreStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}