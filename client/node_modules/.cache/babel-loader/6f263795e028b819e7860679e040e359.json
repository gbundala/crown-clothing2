{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport directoryReducer from \"./directory/directory.reducer\";\nimport shopReducer from \"./shop/shop.reducer\";\nimport likedReducer from \"./liked/liked.reducer\";\nconst persistConfig = {\n  key: \"root\",\n  //essentially at what point in our reducer we want to start storing -- from the root\n  storage,\n  //this is essentiall the same as writing storage: storage\n  whitelist: [\"cart\"] //all we want to persist is the cart for now as the user is already handled by firebase\n\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer,\n  liked: likedReducer\n});\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/client/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","directoryReducer","shopReducer","likedReducer","persistConfig","key","whitelist","rootReducer","user","cart","directory","shop","liked"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AACP;AACbP,EAAAA,OAFoB;AAEX;AACTQ,EAAAA,SAAS,EAAE,CAAC,MAAD,CAHS,CAGC;;AAHD,CAAtB;AAMA,MAAMC,WAAW,GAAGX,eAAe,CAAC;AAClCY,EAAAA,IAAI,EAAET,WAD4B;AAElCU,EAAAA,IAAI,EAAET,WAF4B;AAGlCU,EAAAA,SAAS,EAAET,gBAHuB;AAIlCU,EAAAA,IAAI,EAAET,WAJ4B;AAKlCU,EAAAA,KAAK,EAAET;AAL2B,CAAD,CAAnC;AAQA,eAAeN,cAAc,CAACO,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport directoryReducer from \"./directory/directory.reducer\";\nimport shopReducer from \"./shop/shop.reducer\";\nimport likedReducer from \"./liked/liked.reducer\";\n\nconst persistConfig = {\n  key: \"root\", //essentially at what point in our reducer we want to start storing -- from the root\n  storage, //this is essentiall the same as writing storage: storage\n  whitelist: [\"cart\"], //all we want to persist is the cart for now as the user is already handled by firebase\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer,\n  liked: likedReducer,\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n"]},"metadata":{},"sourceType":"module"}