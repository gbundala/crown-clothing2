{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielbundala/Desktop/crown-clothing2/client/src/components/liked-dropdown/liked-dropdown.component.jsx\";\nimport React from \"react\";\nimport \"./liked-dropdown.styles.scss\";\nimport LikedItem from \"../liked-item/liked-item.component\";\nimport { connect } from \"react-redux\";\nimport { selectLikedItems } from \"../../redux/liked/liked.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { toggleLikedHidden } from \"../../redux/liked/liked.actions\";\n\nconst LikedDropdown = ({\n  likedItems,\n  toggleLikedHidden\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"liked-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"liked-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, likedItems.length ? likedItems.map(likedItem => /*#__PURE__*/React.createElement(LikedItem, {\n    key: likedItem.id,\n    item: likedItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"empty-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"Your list of liked items is empty\", \" \")), /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: () => {\n      history.push(\"/likeditems\");\n      dispatch(toggleLikedHidden());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"LIKED ITEMS\"));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  likedItems: selectLikedItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleLikedHidden: () => dispatch(toggleLikedHidden())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LikedDropdown);","map":{"version":3,"sources":["/Users/gabrielbundala/Desktop/crown-clothing2/client/src/components/liked-dropdown/liked-dropdown.component.jsx"],"names":["React","LikedItem","connect","selectLikedItems","createStructuredSelector","toggleLikedHidden","LikedDropdown","likedItems","length","map","likedItem","id","history","push","dispatch","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,8BAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,iBAAT,QAAkC,iCAAlC;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcF,EAAAA;AAAd,CAAD,KAAuC;AAC3D,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,UAAU,CAACC,MAAX,GACCD,UAAU,CAACE,GAAX,CAAgBC,SAAD,iBACb,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,SAAS,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,gBAKC;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACoC,GADpC,CANJ,CADF,eAYE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbE,MAAAA,OAAO,CAACC,IAAR,CAAa,aAAb;AACAC,MAAAA,QAAQ,CAACT,iBAAiB,EAAlB,CAAR;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZF,CADF;AAuBD,CAxBD;;AA0BA,MAAMU,eAAe,GAAGX,wBAAwB,CAAC;AAC/CG,EAAAA,UAAU,EAAEJ;AADmC,CAAD,CAAhD;;AAIA,MAAMa,kBAAkB,GAAIF,QAAD,KAAe;AACxCT,EAAAA,iBAAiB,EAAE,MAAMS,QAAQ,CAACT,iBAAiB,EAAlB;AADO,CAAf,CAA3B;;AAIA,eAAeH,OAAO,CAACa,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,aAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport \"./liked-dropdown.styles.scss\";\nimport LikedItem from \"../liked-item/liked-item.component\";\nimport { connect } from \"react-redux\";\nimport { selectLikedItems } from \"../../redux/liked/liked.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { toggleLikedHidden } from \"../../redux/liked/liked.actions\";\n\nconst LikedDropdown = ({ likedItems, toggleLikedHidden }) => {\n  return (\n    <div className=\"liked-dropdown\">\n      <div className=\"liked-items\">\n        {likedItems.length ? (\n          likedItems.map((likedItem) => (\n            <LikedItem key={likedItem.id} item={likedItem} />\n          ))\n        ) : (\n          <span className=\"empty-message\">\n            Your list of liked items is empty{\" \"}\n          </span>\n        )}\n      </div>\n      <CustomButton\n        onClick={() => {\n          history.push(\"/likeditems\");\n          dispatch(toggleLikedHidden());\n        }}\n      >\n        LIKED ITEMS\n      </CustomButton>\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  likedItems: selectLikedItems,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleLikedHidden: () => dispatch(toggleLikedHidden()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LikedDropdown);\n"]},"metadata":{},"sourceType":"module"}